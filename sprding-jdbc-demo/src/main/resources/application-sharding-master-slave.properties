#1，创建两个主库，为了实现水平分库（ordermaster0,ordermaster1）
#2，每个主库创建两个表，为了实现水平分表(t_order0,t_order1)
#3，创建两个从库，为了实现读写分离，从库也一样创建两个表(orderslave0,orderslave1)

#1.配置数据源 2主2从
spring.shardingsphere.datasource.names=ordermaster0,orderslave0,ordermaster1,orderslave1

spring.shardingsphere.datasource.ordermaster0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ordermaster0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ordermaster0.jdbc-url=jdbc:mysql://localhost:3306/ordermaster0
spring.shardingsphere.datasource.ordermaster0.username=root
spring.shardingsphere.datasource.ordermaster0.password=root

spring.shardingsphere.datasource.ordermaster1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ordermaster1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ordermaster1.jdbc-url=jdbc:mysql://localhost:3306/ordermaster1
spring.shardingsphere.datasource.ordermaster1.username=root
spring.shardingsphere.datasource.ordermaster1.password=root

spring.shardingsphere.datasource.orderslave0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.orderslave0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.orderslave0.jdbc-url=jdbc:mysql://localhost:3306/orderslave0
spring.shardingsphere.datasource.orderslave0.username=root
spring.shardingsphere.datasource.orderslave0.password=root

spring.shardingsphere.datasource.orderslave1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.orderslave1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.orderslave1.jdbc-url=jdbc:mysql://localhost:3306/orderslave1
spring.shardingsphere.datasource.orderslave1.username=root
spring.shardingsphere.datasource.orderslave1.password=root

#2.配置水平分库及水平分表的策略
#2.1 指定分片键
spring.shardingsphere.sharding.tables.t_order.databaseStrategy.inline.shardingColumn=sale_id
#2.2 指定分片算法
spring.shardingsphere.sharding.tables.t_order.databaseStrategy.inline.algorithmExpression=ordermaster$->{sale_id % 2}

#3.1 指定分片键
spring.shardingsphere.sharding.tables.t_order.tableStrategy.inline.shardingColumn=id
#3.2 指定分片算法
spring.shardingsphere.sharding.tables.t_order.tableStrategy.inline.algorithmExpression=t_order$->{id % 2}
spring.shardingsphere.sharding.tables.t_order.actualDataNodes=ordermaster${0..1}.t_order${0..1}

#4.指定表的主键及生成策略
spring.shardingsphere.sharding.tables.t_order.keyGenerator.column=id
spring.shardingsphere.sharding.tables.t_order.keyGenerator.type=SNOWFLAKE

#5.设置读写分离
spring.shardingsphere.sharding.master-slaverules.ordermaster0.masterDataSourceName=ordermaster0
spring.shardingsphere.sharding.master-slaverules.ordermaster0.slaveDataSourceNames=orderslave0
spring.shardingsphere.sharding.master-slaverules.ordermaster1.masterDataSourceName=ordermaster1
spring.shardingsphere.sharding.master-slaverules.ordermaster1.slaveDataSourceNames=orderslave1